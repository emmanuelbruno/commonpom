image: maven:3.5.0-jdk-8-alpine

cache:                                                                                                  
  paths:
    - ".m2/repository"
    - ".sonar/cache"   
    
before_script:
    - cp .travis.settings.xml .ci-settings.xml

stages:
  - build
  - test
  - deploy
  - doc
  - release

build:
  stage: build
  environment: staging
  script:
    - export MAVEN_CLI_OPTS="--settings .ci-settings.xml --batch-mode"
    - export MAVEN_OPTS="-Duser.home=${CI_PROJECT_DIR} -Dmaven.repo.local=${CI_PROJECT_DIR}/.m2/repository"
    - mvn ${MAVEN_CLI_OPTS} help:effective-pom
    - | 
        if [[ "${TRAVIS_BRANCH}" == release-* ]]; then
            QUALIFIER=-frozen-${CI_PIPELINE_ID}
        elif [[ "${TRAVIS_BRANCH}" == "development" ]]; then
            QUALIFIER=-dev-${CI_PIPELINE_ID}
        elif [[ "${TRAVIS_BRANCH}" == v[0-9]* ]]; then
            QUALIFIER=""
        else
            QUALIFIER=-${TRAVIS_BRANCH}-${TRAVIS_BUILD_NUMBER}
        fi && mvn ${MAVEN_CLI_OPTS} build-helper:parse-version versions:set -DgenerateBackupPoms=false -DnewVersion='${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}'${QUALIFIER}
    - mvn ${MAVEN_CLI_OPTS} clean compile
  tags:
    - docker
    
package:
  stage: test
  environment: staging
  dependencies:
    - build
  script:  "mvn ${MAVEN_CLI_OPTS} package"
 artifacts:
    when: on_success
    expire_in: 1 day
    paths:
        - target/    
 tags:
    - docker

sonar:
  stage: test
  environment: staging
  dependencies:
    - build
  script: "mvn ${MAVEN_CLI_OPTS} verify sonar:sonar"
  tags:
    - docker
        
deploy_bintray:
  stage: deploy
  environment: staging
  dependencies:
    - package
    - sonar
  script:
    - mvn ${MAVEN_CLI_OPTS} -P stage-devel-bintray deploy
  only:
    - master
  tags:
    - docker

deploy_nexus:
  stage: deploy
  environment: staging
  dependencies:
    - package
    - sonar
  script:
    - mvn ${MAVEN_CLI_OPTS} -P stage-devel-nexus deploy
  tags:
    - docker
    
javadoc:
  stage: documentation
  environment: staging
  only:
    - tags
  dependencies:
    - maven:deploy-nexus
  script: "mvn ${MAVEN_CLI_OPTS} javadoc:javadoc"
  artifacts:
    when: on_success
    expire_in: 1 week
    paths:
      - target/site/apidocs/